.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download__examples_01_ERT_plot_syscal_ip.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_01_ERT_plot_syscal_ip.py:


Importing Syscal IP data
========================



.. code-block:: default

    import reda







a hack to prevent large loading times...


.. code-block:: default


    # import os
    # import pickle
    # pfile = 'ip.pickle'
    # if os.path.isfile(pfile):
    #     with open(pfile, 'rb') as fid:
    #         ip = pickle.load(fid)
    # else:
    #     ip = reda.TDIP()
    #     ip.import_syscal_bin('data_syscal_ip/data_normal.bin')
    #     ip.import_syscal_bin(
    #       'data_syscal_ip/data_reciprocal.bin', reciprocals=48)
    #     with open(pfile, 'wb') as fid:
    #         pickle.dump(ip, fid)







normal loading of tdip data


.. code-block:: default

    ip = reda.TDIP()
    # import pprofile
    # profiler = pprofile.Profile()
    # with profiler():
    ip.import_syscal_bin('data_syscal_ip/data_normal.bin')
    # profile.print_stats()
    # exit()
    ip.import_syscal_bin('data_syscal_ip/data_reciprocal.bin', reciprocals=48)


    print(ip.data[['a', 'b', 'm', 'n', 'id', 'norrec']])

    # import IPython
    # IPython.embed()
    # exit()




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    WARNING: One or more jumps in measurement numbers detected
    The jump indices are:
    989
    Removing data points subsequent to the first jump
    generating ids
    assigning ids
    renumbering electrode numbers
    generating ids
    assigning ids
           a   b   m   n    id norrec
    0      1   2   4   5   170    nor
    1      5   4   2   1   170    rec
    2      1   2   5   6   211    nor
    3      6   5   2   1   211    rec
    89     6   5   3   2   212    rec
    88     2   3   5   6   212    nor
    4      1   2   6   7   252    nor
    5      7   6   2   1   252    rec
    91     7   6   3   2   253    rec
    90     2   3   6   7   253    nor
    175    7   6   4   3   254    rec
    174    3   4   6   7   254    nor
    6      1   2   7   8   293    nor
    7      8   7   2   1   293    rec
    93     8   7   3   2   294    rec
    92     2   3   7   8   294    nor
    177    8   7   4   3   295    rec
    176    3   4   7   8   295    nor
    259    8   7   5   4   296    rec
    258    4   5   7   8   296    nor
    8      1   2   8   9   334    nor
    9      9   8   2   1   334    rec
    95     9   8   3   2   335    rec
    94     2   3   8   9   335    nor
    179    9   8   4   3   336    rec
    178    3   4   8   9   336    nor
    260    4   5   8   9   337    nor
    261    9   8   5   4   337    rec
    340    5   6   8   9   338    nor
    341    9   8   6   5   338    rec
    ...   ..  ..  ..  ..   ...    ...
    1768  30  31  47  48  1965    nor
    1769  48  47  31  30  1965    rec
    1796  31  32  47  48  1966    nor
    1797  48  47  32  31  1966    rec
    1822  32  33  47  48  1967    nor
    1823  48  47  33  32  1967    rec
    1846  33  34  47  48  1968    nor
    1847  48  47  34  33  1968    rec
    1868  34  35  47  48  1969    nor
    1869  48  47  35  34  1969    rec
    1888  35  36  47  48  1970    nor
    1889  48  47  36  35  1970    rec
    1906  36  37  47  48  1971    nor
    1907  48  47  37  36  1971    rec
    1922  37  38  47  48  1972    nor
    1923  48  47  38  37  1972    rec
    1937  48  47  39  38  1973    rec
    1936  38  39  47  48  1973    nor
    1949  48  47  40  39  1974    rec
    1948  39  40  47  48  1974    nor
    1958  40  41  47  48  1975    nor
    1959  48  47  41  40  1975    rec
    1966  41  42  47  48  1976    nor
    1967  48  47  42  41  1976    rec
    1972  42  43  47  48  1977    nor
    1973  48  47  43  42  1977    rec
    1976  43  44  47  48  1978    nor
    1977  48  47  44  43  1978    rec
    1978  44  45  47  48  1979    nor
    1979  48  47  45  44  1979    rec

    [1980 rows x 6 columns]



.. code-block:: default

    import reda.utils.geometric_factors as geomK
    K = geomK.compute_K_analytical(ip.data, spacing=0.25)
    geomK.apply_K(ip.data, K)

    import reda.utils.fix_sign_with_K as fixK
    ip.data = fixK.fix_sign_with_K(ip.data)







plot a decay curve by specifying the index
note that no file will be saved to disk if filename parameter is not provided


.. code-block:: default

    ip.plot_decay_curve(filename='decay_curve.png',
                        index_nor=0, index_rec=1978, return_fig=True)




.. image:: /_examples/01_ERT/images/sphx_glr_plot_syscal_ip_001.png
    :class: sphx-glr-single-img




you can also specify only one index
this will only return a figure object, but will not save to file:


.. code-block:: default

    ip.plot_decay_curve(filename='decay_curve.png',
                        index_nor=0, return_fig=True)




.. image:: /_examples/01_ERT/images/sphx_glr_plot_syscal_ip_002.png
    :class: sphx-glr-single-img




it does not matter if you choose normal or reciprocal


.. code-block:: default

    ip.plot_decay_curve(index_rec=0, return_fig=True)




.. image:: /_examples/01_ERT/images/sphx_glr_plot_syscal_ip_003.png
    :class: sphx-glr-single-img




plot a decay curve by specifying the index


.. code-block:: default

    ip.plot_decay_curve(nr_id=170, return_fig=True)




.. image:: /_examples/01_ERT/images/sphx_glr_plot_syscal_ip_004.png
    :class: sphx-glr-single-img




a  b  m  n
0     1  2  4  5
1978  5  4  2  1


.. code-block:: default

    ip.plot_decay_curve(abmn=(1, 2, 5, 4), return_fig=True)




.. image:: /_examples/01_ERT/images/sphx_glr_plot_syscal_ip_005.png
    :class: sphx-glr-single-img




reciprocal is also ok


.. code-block:: default

    ip.plot_decay_curve(abmn=(4, 5, 2, 1), return_fig=True)



.. image:: /_examples/01_ERT/images/sphx_glr_plot_syscal_ip_006.png
    :class: sphx-glr-single-img





.. _sphx_glr_download__examples_01_ERT_plot_syscal_ip.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_syscal_ip.py <plot_syscal_ip.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_syscal_ip.ipynb <plot_syscal_ip.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
